{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/text-to-signals-and-voice-main/convert-to-sign-language-and-voice/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { YoutubeTranscript } from 'youtube-transcript';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [youtubeUrl, setYoutubeUrl] = useState('');\n  const [inputText, setInputText] = useState('');\n  const [outputSign, setOutputSign] = useState('');\n  useEffect(() => {\n    convertToSignLanguage();\n  }, [inputText]);\n  useEffect(() => {\n    if (youtubeUrl) {\n      const videoId = extractVideoId(youtubeUrl);\n      if (videoId) {\n        fetchTranscript(videoId);\n      } else {\n        alert('Invalid YouTube URL. Please check the URL format.');\n      }\n    }\n  }, [youtubeUrl]);\n  function removeAccents(text) {\n    return text.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n  function convertToSignLanguage() {\n    const textWithoutAccents = removeAccents(inputText);\n    setOutputSign(textWithoutAccents);\n  }\n  function clearText() {\n    setYoutubeUrl('');\n    setInputText('');\n    setOutputSign('');\n  }\n  function readOutLoud() {\n    if ('speechSynthesis' in window) {\n      var synthesis = window.speechSynthesis;\n      var message = new SpeechSynthesisUtterance(inputText);\n      synthesis.speak(message);\n    } else {\n      alert(\"Your browser does not support speech synthesis.\");\n    }\n  }\n  function stopReading() {\n    if (window.speechSynthesis.speaking) {\n      window.speechSynthesis.cancel();\n    }\n  }\n  function extractVideoId(url) {\n    const urlObj = new URL(url);\n    const videoId = urlObj.searchParams.get('v');\n    if (videoId) {\n      return videoId;\n    }\n    return null;\n  }\n  async function fetchTranscript(videoId) {\n    try {\n      const transcript = await YoutubeTranscript.fetchTranscript(videoId);\n      const transcriptText = transcript.map(entry => entry.text).join(' ');\n      setInputText(transcriptText);\n    } catch (error) {\n      console.error('Error fetching transcript:', error);\n      alert('Failed to fetch transcript. Please check the URL and try again.');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      tabIndex: \"0\",\n      children: \"Convert to Sign Language and Voice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Paste or type the YouTube URL here\",\n      value: youtubeUrl,\n      onChange: e => setYoutubeUrl(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-style\",\n      onClick: readOutLoud,\n      children: \"Read out loud\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-style\",\n      onClick: stopReading,\n      children: \"Stop Reading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      tabIndex: \"0\",\n      id: \"outputSign\",\n      children: outputSign\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-style\",\n      onClick: clearText,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+LyObE8xwD5bWPLf7fraQHr2ZYM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","YoutubeTranscript","jsxDEV","_jsxDEV","App","_s","youtubeUrl","setYoutubeUrl","inputText","setInputText","outputSign","setOutputSign","convertToSignLanguage","videoId","extractVideoId","fetchTranscript","alert","removeAccents","text","normalize","replace","textWithoutAccents","clearText","readOutLoud","window","synthesis","speechSynthesis","message","SpeechSynthesisUtterance","speak","stopReading","speaking","cancel","url","urlObj","URL","searchParams","get","transcript","transcriptText","map","entry","join","error","console","className","children","tabIndex","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","id","_c","$RefreshReg$"],"sources":["/home/user/Documents/text-to-signals-and-voice-main/convert-to-sign-language-and-voice/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { YoutubeTranscript } from 'youtube-transcript';\nimport './App.css';\n\nfunction App() {\n  const [youtubeUrl, setYoutubeUrl] = useState('');\n  const [inputText, setInputText] = useState('');\n  const [outputSign, setOutputSign] = useState('');\n\n  useEffect(() => {\n    convertToSignLanguage();\n  }, [inputText]);\n\n  useEffect(() => {\n    if (youtubeUrl) {\n      const videoId = extractVideoId(youtubeUrl);\n      if (videoId) {\n        fetchTranscript(videoId);\n      } else {\n        alert('Invalid YouTube URL. Please check the URL format.');\n      }\n    }\n  }, [youtubeUrl]);\n\n  function removeAccents(text) {\n    return text.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\");\n  }\n\n  function convertToSignLanguage() {\n    const textWithoutAccents = removeAccents(inputText);\n    setOutputSign(textWithoutAccents);\n  }\n\n  function clearText() {\n    setYoutubeUrl('');\n    setInputText('');\n    setOutputSign('');\n  }\n\n  function readOutLoud() {\n    if ('speechSynthesis' in window) {\n      var synthesis = window.speechSynthesis;\n      var message = new SpeechSynthesisUtterance(inputText);\n      synthesis.speak(message);\n    } else {\n      alert(\"Your browser does not support speech synthesis.\");\n    }\n  }\n\n  function stopReading() {\n    if (window.speechSynthesis.speaking) {\n      window.speechSynthesis.cancel();\n    }\n  }\n\n  function extractVideoId(url) {\n    const urlObj = new URL(url);\n    const videoId = urlObj.searchParams.get('v');\n    if (videoId) {\n      return videoId;\n    }\n    return null;\n  }\n\n  async function fetchTranscript(videoId) {\n    try {\n      const transcript = await YoutubeTranscript.fetchTranscript(videoId);\n      const transcriptText = transcript.map(entry => entry.text).join(' ');\n      setInputText(transcriptText);\n    } catch (error) {\n      console.error('Error fetching transcript:', error);\n      alert('Failed to fetch transcript. Please check the URL and try again.');\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h1 tabIndex=\"0\">Convert to Sign Language and Voice</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Paste or type the YouTube URL here\"\n        value={youtubeUrl}\n        onChange={(e) => setYoutubeUrl(e.target.value)}\n      /><br />\n      <button className=\"button-style\" onClick={readOutLoud}>Read out loud</button>\n      <button className=\"button-style\" onClick={stopReading}>Stop Reading</button>\n      <div tabIndex=\"0\" id=\"outputSign\">{outputSign}</div>\n      <button className=\"button-style\" onClick={clearText}>Clear</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}